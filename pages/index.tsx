import Head from 'next/head'
import Image from 'next/image'
import type { NextPage, GetStaticProps } from "next"

import React, { useState } from 'react';
import { Box, Grid, GridItem } from "@chakra-ui/react"
import { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react'

import NeededMats from "@/src/components/NeededMats";

import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'


import Item from '@/src/types/item'
import {load} from '@/src/loader'

const inter = Inter({ subsets: ['latin'] })

interface HomeProps {
  items: Array<Item>;
}

export async function getStaticProps() {
  // const files = fs.readdirSync(path.join('posts'))
  const items = load()
  return {
    props: { items }, // will be passed to the page component as props
  }
}

function categorizeItemsByStore(items : Array<Item>) {
  const storeItems : { [ storeName : string ] : Array<Item> } = {};

  items.forEach(( item : Item) => {
    const storeName = item.store

    if (storeItems[storeName]) {
      storeItems[storeName].push(item)
    } else {
      storeItems[storeName] = [item];
    }
  })

  return storeItems;
}

function itemsMap(items : Array<Item>) : { [name : string] : Item} {
  const itemsMap : { [name : string] : Item} = {};
  items.map((item) => {
    itemsMap[item.name] = item
  })
  return itemsMap
}

export default function Home(props : HomeProps) {
  const items = props.items;
  const allStoreItems = categorizeItemsByStore(items);

  const allItems = itemsMap(items)

  const [selectedItem, setSelectedItem] = useState<Item | null>(null);

  console.log(allStoreItems);

  const storeNames = Object.keys(allStoreItems);

  return (
    <>
      <Head>
        <title>Simcity BuildIt - ProduceIt!</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Tabs>
          <TabList>
            {
              storeNames.map((n : string) => {
                return <Tab key={n}>{n}</Tab>;
              })
            }
          </TabList>

          <TabPanels>
            {
              storeNames.map((n : string) => {
                const storeItems = allStoreItems[n]

                return <TabPanel key={n}>
                  <Grid templateColumns='repeat(12, 1fr)' gap={2} autoFlow="row dense">
                    <GridItem colSpan={2}>
                      {
                        storeItems.map(( item ) => {
                          return <Box w={'65px'} h={'65px'} key={item.name} textAlign={"center"} onClick={() => {
                            setSelectedItem(item)
                          }}>
                            <div style={{
                              display: "flex",
                              justifyContent: "center",
                            }}>
                              <Image
                                key={item.name}
                                src={ `/items/${item.name}.png` }
                                alt={item.name}
                                width={40}
                                height={40}
                              />
                            </div>
                            <div style={{textAlign: 'center', fontSize: 13}}>
                              {item.name}
                            </div>
                          </Box>
                        })
                      }
                    </GridItem>
                    <GridItem colSpan={10}>
                      { selectedItem ? <NeededMats item={selectedItem} allItems={allItems}/> : null }
                    </GridItem>

                  </Grid>
                </TabPanel>;
              })
            }
          </TabPanels>
        </Tabs>
      </main>
    </>
  )
}
